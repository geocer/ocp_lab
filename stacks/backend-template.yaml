apiVersion: v1
kind: Template
metadata:
  annotations:
    iconClass: icon-nodejs
    description: "An example for Backend application with Nodejs. It was provided by Gerdau's Devops Team, see https://gitlab.gerdau.digital/devops/ocp-lab-guide/blob/master/README.md."
    tags: microservice,nodejs
    "openshift.io/display-name": "Backend Gerdau Lab"
  name: backend-gerdau-lab
objects:
- apiVersion: v1
  kind: ImageStream
  metadata:
    name: backend
    labels:
      application: backend
  spec:
    tags:
    - name: latest
- apiVersion: v1
  kind: BuildConfig
  metadata:
    name: backend
    labels:
      application: backend
  spec:
    output:
      to:
        kind: ImageStreamTag
        name: backend:latest
    source:
      git:
        ref: ${GIT_REF}
        uri: ${GIT_URI}
      type: Git
    strategy:
      sourceStrategy:
        from:
          kind: ImageStreamTag
          name: nodejs:10
          namespace: ${IMAGE_STREAM_NAMESPACE}
      type: Source
    triggers:
    - type: ConfigChange
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    name: backend
    labels:
      application: backend
  spec:
    replicas: 1
    selector:
      deploymentconfig: backend
    strategy:
      activeDeadlineSeconds: 21600
      resources: {}
      rollingParams:
        intervalSeconds: 1
        maxSurge: 25%
        maxUnavailable: 25%
        timeoutSeconds: 600
        updatePeriodSeconds: 1
      type: Rolling
    template:
      metadata:
        labels:
          application: backend
          deploymentconfig: backend
        name: backend
      spec:
        containers:
        - env:
          - name: TZ
            value: "Brazil"
          image: backend
          imagePullPolicy: Always
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /v1/health/live
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: backend
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          readinessProbe:
            failureThreshold: 10
            httpGet:
              path: /v1/health/read
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              memory: 256Mi
              cpu: 50m
            requests:
              memory: 128Mi
              cpu: 10m
          terminationMessagePath: /dev/termination-log
        dnsPolicy: ClusterFirst
        restartPolicy: Always
        securityContext: {}
        terminationGracePeriodSeconds: 75
    triggers:
    - imageChangeParams:
        automatic: true
        containerNames:
        - backend
        from:
          kind: ImageStreamTag
          name: backend:latest
      type: ImageChange
    - type: ConfigChange
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: backend
      application: backend
    name: backend
  spec:
    ports:
    - port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      deploymentconfig: backend
- apiVersion: v1
  kind: Route
  metadata:
    labels:
      application: backend
    name: backend
  spec:
    to:
      kind: Service
      name: backend
      weight: 100
parameters:
- displayName: Application name
  name: APPLICATION_NAME
  required: true
  value: backend
- description: Git source URI for application
  displayName: Git source repository
  name: GIT_URI
  required: true
- description: Git branch/tag reference
  displayName: Git branch/tag reference
  name: GIT_REF
  value: master
- displayName: ImageStream Namespace
  description: Namespace in which the ImageStreams for Red Hat NodeJs image is installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.
  name: IMAGE_STREAM_NAMESPACE
  required: true
  value: openshift